@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@using System.ComponentModel.DataAnnotations
@using BlazorApp1.Data
@using System.Data
@using BlazorApp1.Components

@inject Database DBConnect
@page "/register"
@inject NavigationManager NavManager
@inject IDialogService DialogService

<MudMainContent>
    <h1>Register</h1>
    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="First name" HelperText="Max. 8 characters"
                                      @bind-Value="model.Username" For="@(() => model.Username)" />
                        <MudTextField Label="Email" Class="mt-3"
                                      @bind-Value="model.Email" For="@(() => model.Email)" />
                        <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                      @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                        <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                                      @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="FindUser">Register</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
        <MudText>@resultText</MudText>
        <MudButton OnClick="OpenLogIn" Color="Color.Info">Log In</MudButton>
    </EditForm>
</MudMainContent>

@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;
    String resultText;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }
    }

    private void ResetInfo()
    {
        model.Username = "";
        model.Email = "";
        model.Password = "";
        model.Password2 = "";
    }

    private void OpenDialog(string page)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogParameters option = new DialogParameters { ["txt"] = resultText, ["page"] = page };
        DialogService.Show<Components.Dialog>("", option, options);
    }

    private void OpenLogIn()
    {
        NavManager.NavigateTo("/logIn");
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

    private void FindUser()
    {
        Boolean result = DBConnect.FindUser(model.Username, model.Email, model.Password);
        if(model.Username == "" || model.Password == "" || model.Email == "" || model.Password2 == "")
        {
            resultText = "Falta algún dato";
            OpenDialog("/register");
        }
        else{
            if (!result)
            {
                if (model.Password2 != model.Password)
                {
                    resultText = "Las contraseñas no coinciden";
                    OpenDialog("/register");
                }
                else
                {
                    AddUser();
                    resultText = "Usuario registrado correctamente, inicie sesión";
                    ResetInfo();
                    OpenDialog("/logIn");
                }

            }
            else
            {
                resultText = "El usuario ya existe, inicie sesión";
                OpenDialog("/logIn");
            }
        }

    }

    private void AddUser()
    {
        DBConnect.AddUser(model.Username, model.Email, model.Password);
    }
}
